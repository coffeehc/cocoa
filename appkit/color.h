#import <stdbool.h>
#import <stdlib.h>
#import <utils.h>
#import <Appkit/Appkit.h>

void* C_Color_Alloc();

void* C_NSColor_Init(void* ptr);
void* C_NSColor_InitWithCoder(void* ptr, void* coder);
void* C_NSColor_ColorWithSystemEffect(void* ptr, int systemEffect);
void* C_NSColor_ColorUsingColorSpace(void* ptr, void* space);
void* C_NSColor_BlendedColorWithFraction_OfColor(void* ptr, double fraction, void* color);
void* C_NSColor_ColorWithAlphaComponent(void* ptr, double alpha);
void* C_NSColor_HighlightWithLevel(void* ptr, double val);
void* C_NSColor_ShadowWithLevel(void* ptr, double val);
void* C_NSColor_ColorFromPasteboard(void* pasteBoard);
void C_NSColor_WriteToPasteboard(void* ptr, void* pasteBoard);
void* C_NSColor_ColorUsingType(void* ptr, int _type);
void C_NSColor_DrawSwatchInRect(void* ptr, CGRect rect);
void C_NSColor_Set(void* ptr);
void C_NSColor_SetFill(void* ptr);
void C_NSColor_SetStroke(void* ptr);
void* C_NSColor_ColorNamed(void* name);
void* C_NSColor_ColorNamed_Bundle(void* name, void* bundle);
void* C_NSColor_ColorWithCatalogName_ColorName(void* listName, void* colorName);
void* C_NSColor_ColorWithSRGBRed_Green_Blue_Alpha(double red, double green, double blue, double alpha);
void* C_NSColor_ColorWithDisplayP3Red_Green_Blue_Alpha(double red, double green, double blue, double alpha);
void* C_NSColor_ColorWithRed_Green_Blue_Alpha(double red, double green, double blue, double alpha);
void* C_NSColor_ColorWithCalibratedRed_Green_Blue_Alpha(double red, double green, double blue, double alpha);
void* C_NSColor_ColorWithDeviceRed_Green_Blue_Alpha(double red, double green, double blue, double alpha);
void* C_NSColor_ColorWithCalibratedHue_Saturation_Brightness_Alpha(double hue, double saturation, double brightness, double alpha);
void* C_NSColor_ColorWithDeviceHue_Saturation_Brightness_Alpha(double hue, double saturation, double brightness, double alpha);
void* C_NSColor_ColorWithHue_Saturation_Brightness_Alpha(double hue, double saturation, double brightness, double alpha);
void* C_NSColor_ColorWithColorSpace_Hue_Saturation_Brightness_Alpha(void* space, double hue, double saturation, double brightness, double alpha);
void* C_NSColor_ColorWithDeviceCyan_Magenta_Yellow_Black_Alpha(double cyan, double magenta, double yellow, double black, double alpha);
void* C_NSColor_ColorWithWhite_Alpha(double white, double alpha);
void* C_NSColor_ColorWithCalibratedWhite_Alpha(double white, double alpha);
void* C_NSColor_ColorWithDeviceWhite_Alpha(double white, double alpha);
void* C_NSColor_ColorWithGenericGamma22White_Alpha(double white, double alpha);
void* C_NSColor_ColorWithPatternImage(void* image);
void* C_NSColor_ColorWithCGColor(void* cgColor);
bool C_NSColor_Color_IgnoresAlpha();
void C_NSColor_Color_SetIgnoresAlpha(bool value);
int C_NSColor_NumberOfComponents(void* ptr);
double C_NSColor_AlphaComponent(void* ptr);
double C_NSColor_WhiteComponent(void* ptr);
double C_NSColor_RedComponent(void* ptr);
double C_NSColor_GreenComponent(void* ptr);
double C_NSColor_BlueComponent(void* ptr);
double C_NSColor_CyanComponent(void* ptr);
double C_NSColor_MagentaComponent(void* ptr);
double C_NSColor_YellowComponent(void* ptr);
double C_NSColor_BlackComponent(void* ptr);
double C_NSColor_HueComponent(void* ptr);
double C_NSColor_SaturationComponent(void* ptr);
double C_NSColor_BrightnessComponent(void* ptr);
void* C_NSColor_CatalogNameComponent(void* ptr);
void* C_NSColor_LocalizedCatalogNameComponent(void* ptr);
void* C_NSColor_ColorNameComponent(void* ptr);
void* C_NSColor_LocalizedColorNameComponent(void* ptr);
int C_NSColor_Type(void* ptr);
void* C_NSColor_ColorSpace(void* ptr);
void* C_NSColor_CGColor(void* ptr);
void* C_NSColor_LabelColor();
void* C_NSColor_SecondaryLabelColor();
void* C_NSColor_TertiaryLabelColor();
void* C_NSColor_QuaternaryLabelColor();
void* C_NSColor_TextColor();
void* C_NSColor_PlaceholderTextColor();
void* C_NSColor_SelectedTextColor();
void* C_NSColor_TextBackgroundColor();
void* C_NSColor_SelectedTextBackgroundColor();
void* C_NSColor_KeyboardFocusIndicatorColor();
void* C_NSColor_UnemphasizedSelectedTextColor();
void* C_NSColor_UnemphasizedSelectedTextBackgroundColor();
void* C_NSColor_LinkColor();
void* C_NSColor_SeparatorColor();
void* C_NSColor_SelectedContentBackgroundColor();
void* C_NSColor_UnemphasizedSelectedContentBackgroundColor();
void* C_NSColor_SelectedMenuItemTextColor();
void* C_NSColor_GridColor();
void* C_NSColor_HeaderTextColor();
Array C_NSColor_Color_AlternatingContentBackgroundColors();
void* C_NSColor_ControlAccentColor();
void* C_NSColor_ControlColor();
void* C_NSColor_ControlBackgroundColor();
void* C_NSColor_ControlTextColor();
void* C_NSColor_DisabledControlTextColor();
unsigned int C_NSColor_Color_CurrentControlTint();
void* C_NSColor_SelectedControlColor();
void* C_NSColor_SelectedControlTextColor();
void* C_NSColor_AlternateSelectedControlTextColor();
void* C_NSColor_ScrubberTexturedBackgroundColor();
void* C_NSColor_WindowBackgroundColor();
void* C_NSColor_WindowFrameTextColor();
void* C_NSColor_UnderPageBackgroundColor();
void* C_NSColor_FindHighlightColor();
void* C_NSColor_HighlightColor();
void* C_NSColor_ShadowColor();
void* C_NSColor_SystemBlueColor();
void* C_NSColor_SystemBrownColor();
void* C_NSColor_SystemGrayColor();
void* C_NSColor_SystemGreenColor();
void* C_NSColor_SystemIndigoColor();
void* C_NSColor_SystemOrangeColor();
void* C_NSColor_SystemPinkColor();
void* C_NSColor_SystemPurpleColor();
void* C_NSColor_SystemRedColor();
void* C_NSColor_SystemTealColor();
void* C_NSColor_SystemYellowColor();
void* C_NSColor_ClearColor();
void* C_NSColor_BlackColor();
void* C_NSColor_BlueColor();
void* C_NSColor_BrownColor();
void* C_NSColor_CyanColor();
void* C_NSColor_DarkGrayColor();
void* C_NSColor_GrayColor();
void* C_NSColor_GreenColor();
void* C_NSColor_LightGrayColor();
void* C_NSColor_MagentaColor();
void* C_NSColor_OrangeColor();
void* C_NSColor_PurpleColor();
void* C_NSColor_RedColor();
void* C_NSColor_WhiteColor();
void* C_NSColor_YellowColor();
void* C_NSColor_PatternImage(void* ptr);
